---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: archives.online.mongodbatlas.crossplane.io
spec:
  group: online.mongodbatlas.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - mongodbatlas
    kind: Archive
    listKind: ArchiveList
    plural: archives
    singular: archive
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Archive is the Schema for the Archives API. Provides a Online
          Archive resource for creation, update, and delete
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ArchiveSpec defines the desired state of Archive
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicy field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  clusterName:
                    description: Name of the cluster that contains the collection.
                    type: string
                  collName:
                    description: Name of the collection.
                    type: string
                  collectionType:
                    description: Classification of MongoDB database collection that
                      you want to return, "TIMESERIES" or "STANDARD". Default is "STANDARD".
                    type: string
                  criteria:
                    description: Criteria to use for archiving data.
                    items:
                      properties:
                        dateField:
                          description: Indexed database parameter that stores the
                            date that determines when data moves to the online archive.
                            MongoDB Cloud archives the data when the current date
                            exceeds the date in this database parameter plus the number
                            of days specified through the expireAfterDays parameter.
                          type: string
                        dateFormat:
                          description: 'Syntax used to write the date after which
                            data moves to the online archive. Date can be expressed
                            as ISO 8601 or Epoch timestamps. The Epoch timestamp can
                            be expressed as nanoseconds, milliseconds, or seconds.
                            You must set type to DATE if collectionType is TIMESERIES.
                            Valid values:  ISODATE (default), EPOCH_SECONDS, EPOCH_MILLIS,
                            EPOCH_NANOSECONDS.'
                          type: string
                        expireAfterDays:
                          description: Number of days after the value in the criteria.dateField
                            when MongoDB Cloud archives data in the specified cluster.
                          type: number
                        query:
                          description: JSON query to use to select documents for archiving.
                            Atlas uses the specified query with the db.collection.find(query)
                            command. The empty document {} to return all documents
                            is not supported.
                          type: string
                        type:
                          description: Type of criteria (DATE, CUSTOM)
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  dbName:
                    description: Name of the database that contains the collection.
                    type: string
                  partitionFields:
                    description: (Recommended) Fields to use to partition data. You
                      can specify up to two frequently queried fields to use for partitioning
                      data. Note that queries that donâ€™t contain the specified fields
                      will require a full collection scan of all archived documents,
                      which will take longer and increase your costs. To learn more
                      about how partition improves query performance, see Data Structure
                      in S3. The value of a partition field can be up to a maximum
                      of 700 characters. Documents with values exceeding 700 characters
                      are not archived.
                    items:
                      properties:
                        fieldName:
                          description: Human-readable label that identifies the parameter
                            that MongoDB Cloud uses to partition data. To specify
                            a nested parameter, use the dot notation.
                          type: string
                        order:
                          description: Sequence in which MongoDB Cloud slices the
                            collection data to create partitions. The resource expresses
                            this sequence starting with zero. The value of the criteria.dateField
                            parameter defaults as the first item in the partition
                            sequence.
                          type: number
                      required:
                      - fieldName
                      - order
                      type: object
                    type: array
                  paused:
                    description: State of the online archive. This is required for
                      pausing an active or resume a paused online archive. The resume
                      request will fail if the collection has another active online
                      archive.
                    type: boolean
                  projectId:
                    description: The unique ID for the project
                    type: string
                  schedule:
                    items:
                      properties:
                        dayOfMonth:
                          description: Day of the month when the scheduled archive
                            starts. This field should be provided only when schedule
                            type is MONTHLY.
                          type: number
                        dayOfWeek:
                          description: Day of the week when the scheduled archive
                            starts. The week starts with Monday (1) and ends with
                            Sunday (7). This field should be provided only when schedule
                            type is WEEKLY.
                          type: number
                        endHour:
                          description: Hour of the day when the scheduled window to
                            run one online archive ends.
                          type: number
                        endMinute:
                          description: Minute of the hour when the scheduled window
                            to run one online archive ends.
                          type: number
                        startHour:
                          description: Hour of the day when the when the scheduled
                            window to run one online archive starts.
                          type: number
                        startMinute:
                          description: Minute of the hour when the scheduled window
                            to run one online archive starts.
                          type: number
                        type:
                          description: Type of criteria (DATE, CUSTOM)
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  syncCreation:
                    type: boolean
                type: object
              managementPolicy:
                default: FullControl
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicy
                  specifies the level of control Crossplane has over the managed external
                  resource. This field is planned to replace the DeletionPolicy field
                  in a future release. Currently, both could be set independently
                  and non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - FullControl
                - ObserveOnly
                - OrphanOnDelete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: clusterName is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.clusterName)
            - message: collName is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.collName)
            - message: criteria is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.criteria)
            - message: dbName is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.dbName)
            - message: projectId is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.projectId)
          status:
            description: ArchiveStatus defines the observed state of Archive.
            properties:
              atProvider:
                properties:
                  archiveId:
                    description: ID of the online archive.
                    type: string
                  clusterName:
                    description: Name of the cluster that contains the collection.
                    type: string
                  collName:
                    description: Name of the collection.
                    type: string
                  collectionType:
                    description: Classification of MongoDB database collection that
                      you want to return, "TIMESERIES" or "STANDARD". Default is "STANDARD".
                    type: string
                  criteria:
                    description: Criteria to use for archiving data.
                    items:
                      properties:
                        dateField:
                          description: Indexed database parameter that stores the
                            date that determines when data moves to the online archive.
                            MongoDB Cloud archives the data when the current date
                            exceeds the date in this database parameter plus the number
                            of days specified through the expireAfterDays parameter.
                          type: string
                        dateFormat:
                          description: 'Syntax used to write the date after which
                            data moves to the online archive. Date can be expressed
                            as ISO 8601 or Epoch timestamps. The Epoch timestamp can
                            be expressed as nanoseconds, milliseconds, or seconds.
                            You must set type to DATE if collectionType is TIMESERIES.
                            Valid values:  ISODATE (default), EPOCH_SECONDS, EPOCH_MILLIS,
                            EPOCH_NANOSECONDS.'
                          type: string
                        expireAfterDays:
                          description: Number of days after the value in the criteria.dateField
                            when MongoDB Cloud archives data in the specified cluster.
                          type: number
                        query:
                          description: JSON query to use to select documents for archiving.
                            Atlas uses the specified query with the db.collection.find(query)
                            command. The empty document {} to return all documents
                            is not supported.
                          type: string
                        type:
                          description: Type of criteria (DATE, CUSTOM)
                          type: string
                      type: object
                    type: array
                  dbName:
                    description: Name of the database that contains the collection.
                    type: string
                  id:
                    type: string
                  partitionFields:
                    description: (Recommended) Fields to use to partition data. You
                      can specify up to two frequently queried fields to use for partitioning
                      data. Note that queries that donâ€™t contain the specified fields
                      will require a full collection scan of all archived documents,
                      which will take longer and increase your costs. To learn more
                      about how partition improves query performance, see Data Structure
                      in S3. The value of a partition field can be up to a maximum
                      of 700 characters. Documents with values exceeding 700 characters
                      are not archived.
                    items:
                      properties:
                        fieldName:
                          description: Human-readable label that identifies the parameter
                            that MongoDB Cloud uses to partition data. To specify
                            a nested parameter, use the dot notation.
                          type: string
                        fieldType:
                          description: 'Data type of the parameter that that MongoDB
                            Cloud uses to partition data. Partition parameters of
                            type UUID must be of binary subtype 4. MongoDB Cloud skips
                            partition parameters of type UUID with subtype 3. Valid
                            values: date, int, long, objectId, string, uuid.'
                          type: string
                        order:
                          description: Sequence in which MongoDB Cloud slices the
                            collection data to create partitions. The resource expresses
                            this sequence starting with zero. The value of the criteria.dateField
                            parameter defaults as the first item in the partition
                            sequence.
                          type: number
                      type: object
                    type: array
                  paused:
                    description: State of the online archive. This is required for
                      pausing an active or resume a paused online archive. The resume
                      request will fail if the collection has another active online
                      archive.
                    type: boolean
                  projectId:
                    description: The unique ID for the project
                    type: string
                  schedule:
                    items:
                      properties:
                        dayOfMonth:
                          description: Day of the month when the scheduled archive
                            starts. This field should be provided only when schedule
                            type is MONTHLY.
                          type: number
                        dayOfWeek:
                          description: Day of the week when the scheduled archive
                            starts. The week starts with Monday (1) and ends with
                            Sunday (7). This field should be provided only when schedule
                            type is WEEKLY.
                          type: number
                        endHour:
                          description: Hour of the day when the scheduled window to
                            run one online archive ends.
                          type: number
                        endMinute:
                          description: Minute of the hour when the scheduled window
                            to run one online archive ends.
                          type: number
                        startHour:
                          description: Hour of the day when the when the scheduled
                            window to run one online archive starts.
                          type: number
                        startMinute:
                          description: Minute of the hour when the scheduled window
                            to run one online archive starts.
                          type: number
                        type:
                          description: Type of criteria (DATE, CUSTOM)
                          type: string
                      type: object
                    type: array
                  state:
                    description: 'Status of the online archive. Valid values are:
                      Pending, Archiving, Idle, Pausing, Paused, Orphaned and Deleted'
                    type: string
                  syncCreation:
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
