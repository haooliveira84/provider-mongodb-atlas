---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: databaseinstances.federated.mongodbatlas.crossplane.io
spec:
  group: federated.mongodbatlas.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - mongodbatlas
    kind: DatabaseInstance
    listKind: DatabaseInstanceList
    plural: databaseinstances
    singular: databaseinstance
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DatabaseInstance is the Schema for the DatabaseInstances API.
          Provides a Federated Database Instance resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseInstanceSpec defines the desired state of DatabaseInstance
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicy field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  cloudProviderConfig:
                    items:
                      properties:
                        aws:
                          items:
                            properties:
                              roleId:
                                description: Unique identifier of the role that the
                                  Federated Instance can use to access the data stores.
                                  If necessary, use the Atlas UI or API to retrieve
                                  the role ID. You must also specify the test_s3_bucket.
                                type: string
                              testS3Bucket:
                                description: Name of the S3 data bucket that the provided
                                  role ID is authorized to access. You must also specify
                                  the role_id.
                                type: string
                            required:
                            - roleId
                            - testS3Bucket
                            type: object
                          type: array
                      required:
                      - aws
                      type: object
                    type: array
                  dataProcessRegion:
                    description: Name of the region to which the Federanted Instnace
                      routes client connections for data processing. See the documention
                      for the available region.
                    items:
                      properties:
                        cloudProvider:
                          description: Name of the cloud service provider. Atlas Federated
                            Database only supports AWS.
                          type: string
                        region:
                          description: Name of the AWS region in which the S3 bucket
                            is hosted.
                          type: string
                      required:
                      - cloudProvider
                      - region
                      type: object
                    type: array
                  projectId:
                    description: The unique ID for the project to create a Federated
                      Database Instance.
                    type: string
                  storageDatabases:
                    description: Configuration details for mapping each data store
                      to queryable databases and collections. For complete documentation
                      on this object and its nested fields, see databases. An empty
                      object indicates that the Federated Database Instance has no
                      mapping configuration for any data store.
                    items:
                      properties:
                        collections:
                          description: Array of objects where each object represents
                            a collection and data sources that map to a stores data
                            store.
                          items:
                            properties:
                              dataSources:
                                description: Array of objects where each object represents
                                  a stores data store to map with the collection.
                                items:
                                  properties:
                                    allowInsecure:
                                      description: Flag that validates the scheme
                                        in the specified URLs.
                                      type: boolean
                                    collection:
                                      description: Human-readable label that identifies
                                        the collection in the database.
                                      type: string
                                    collectionRegex:
                                      description: Regex pattern to use for creating
                                        the wildcard (*) collection.
                                      type: string
                                    database:
                                      description: Human-readable label that identifies
                                        the database, which contains the collection
                                        in the cluster.
                                      type: string
                                    databaseRegex:
                                      description: Regex pattern to use for creating
                                        the wildcard database.
                                      type: string
                                    datasetName:
                                      description: Human-readable label that identifies
                                        the dataset that Atlas generates for an ingestion
                                        pipeline run or Online Archive.
                                      type: string
                                    defaultFormat:
                                      description: Default format that Data Lake assumes
                                        if it encounters a file without an extension
                                        while searching the storeName.
                                      type: string
                                    path:
                                      description: File path that controls how MongoDB
                                        Cloud searches for and parses files in the
                                        storeName before mapping them to a collection.
                                        Specify / to capture all files and folders
                                        from the prefix path.
                                      type: string
                                    provenanceFieldName:
                                      description: Name for the field that includes
                                        the provenance of the documents in the results.
                                      type: string
                                    storeName:
                                      description: Name of a data store to map to
                                        the <collection>. Must match the name of an
                                        object in the stores array.
                                      type: string
                                    urls:
                                      description: Comma-separated list of publicly
                                        accessible HTTP URLs where data is stored.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              name:
                                description: Human-readable label of the tag.
                                type: string
                            type: object
                          type: array
                        name:
                          description: Human-readable label of the tag.
                          type: string
                        views:
                          description: Array of objects where each object represents
                            an aggregation pipeline on a collection. To learn more
                            about views, see Views.
                          items:
                            type: object
                          type: array
                      type: object
                    type: array
                  storageStores:
                    description: Each object in the array represents a data store.
                      Federated Database uses the storage.databases configuration
                      details to map data in each data store to queryable databases
                      and collections. For complete documentation on this object and
                      its nested fields, see stores. An empty object indicates that
                      the Federated Database Instance has no configured data stores.
                    items:
                      properties:
                        additionalStorageClasses:
                          items:
                            type: string
                          type: array
                        allowInsecure:
                          description: Flag that validates the scheme in the specified
                            URLs.
                          type: boolean
                        bucket:
                          description: Name of the AWS S3 bucket.
                          type: string
                        clusterId:
                          description: ID of the Cluster the Online Archive belongs
                            to.
                          type: string
                        clusterName:
                          description: Human-readable label of the MongoDB Cloud cluster
                            on which the store is based.
                          type: string
                        defaultFormat:
                          description: Default format that Data Lake assumes if it
                            encounters a file without an extension while searching
                            the storeName.
                          type: string
                        delimiter:
                          description: The delimiter that separates storage_databases.#.collections.#.data_sources.#.path
                            segments in the data store.
                          type: string
                        includeTags:
                          description: Determines whether or not to use S3 tags on
                            the files in the given path as additional partition attributes.
                          type: boolean
                        name:
                          description: Human-readable label of the tag.
                          type: string
                        prefix:
                          description: Prefix the Federated Database Instance applies
                            when searching for files in the S3 bucket.
                          type: string
                        projectId:
                          description: The unique ID for the project to create a Federated
                            Database Instance.
                          type: string
                        provider:
                          description: Defines where the data is stored.
                          type: string
                        public:
                          description: Flag that indicates whether the bucket is public.
                          type: string
                        readPreference:
                          description: MongoDB Cloud cluster read preference, which
                            describes how to route read requests to the cluster.
                          items:
                            properties:
                              maxStalenessSeconds:
                                type: number
                              mode:
                                description: Read preference mode that specifies to
                                  which replica set member to route the read requests.
                                type: string
                              tagSets:
                                description: List that contains tag sets or tag specification
                                  documents.
                                items:
                                  properties:
                                    tags:
                                      description: List of all tags within a tag set
                                      items:
                                        properties:
                                          name:
                                            description: Human-readable label of the
                                              tag.
                                            type: string
                                          value:
                                            description: Value of the tag.
                                            type: string
                                        type: object
                                      type: array
                                  required:
                                  - tags
                                  type: object
                                type: array
                            type: object
                          type: array
                        region:
                          description: Name of the AWS region in which the S3 bucket
                            is hosted.
                          type: string
                        urls:
                          description: Comma-separated list of publicly accessible
                            HTTP URLs where data is stored.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                type: object
              managementPolicy:
                default: FullControl
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicy
                  specifies the level of control Crossplane has over the managed external
                  resource. This field is planned to replace the DeletionPolicy field
                  in a future release. Currently, both could be set independently
                  and non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - FullControl
                - ObserveOnly
                - OrphanOnDelete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: projectId is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.projectId)
          status:
            description: DatabaseInstanceStatus defines the observed state of DatabaseInstance.
            properties:
              atProvider:
                properties:
                  cloudProviderConfig:
                    items:
                      properties:
                        aws:
                          items:
                            properties:
                              externalId:
                                description: Unique identifier associated with the
                                  IAM Role that the Federated Database Instance assumes
                                  when accessing the data stores.
                                type: string
                              iamAssumedRoleArn:
                                description: 'Amazon Resource Name (ARN) of the IAM
                                  Role that the Federated Database Instance assumes
                                  when accessing S3 Bucket data stores. The IAM Role
                                  must support the following actions against each
                                  S3 bucket:'
                                type: string
                              iamUserArn:
                                description: Amazon Resource Name (ARN) of the user
                                  that the Federated Database Instance assumes when
                                  accessing S3 Bucket data stores.
                                type: string
                              roleId:
                                description: Unique identifier of the role that the
                                  Federated Instance can use to access the data stores.
                                  If necessary, use the Atlas UI or API to retrieve
                                  the role ID. You must also specify the test_s3_bucket.
                                type: string
                              testS3Bucket:
                                description: Name of the S3 data bucket that the provided
                                  role ID is authorized to access. You must also specify
                                  the role_id.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  dataProcessRegion:
                    description: Name of the region to which the Federanted Instnace
                      routes client connections for data processing. See the documention
                      for the available region.
                    items:
                      properties:
                        cloudProvider:
                          description: Name of the cloud service provider. Atlas Federated
                            Database only supports AWS.
                          type: string
                        region:
                          description: Name of the AWS region in which the S3 bucket
                            is hosted.
                          type: string
                      type: object
                    type: array
                  hostnames:
                    description: The list of hostnames assigned to the Federated Database
                      Instance. Each string in the array is a hostname assigned to
                      the Federated Database Instance.
                    items:
                      type: string
                    type: array
                  id:
                    type: string
                  projectId:
                    description: The unique ID for the project to create a Federated
                      Database Instance.
                    type: string
                  state:
                    description: 'Current state of the Federated Database Instance:'
                    type: string
                  storageDatabases:
                    description: Configuration details for mapping each data store
                      to queryable databases and collections. For complete documentation
                      on this object and its nested fields, see databases. An empty
                      object indicates that the Federated Database Instance has no
                      mapping configuration for any data store.
                    items:
                      properties:
                        collections:
                          description: Array of objects where each object represents
                            a collection and data sources that map to a stores data
                            store.
                          items:
                            properties:
                              dataSources:
                                description: Array of objects where each object represents
                                  a stores data store to map with the collection.
                                items:
                                  properties:
                                    allowInsecure:
                                      description: Flag that validates the scheme
                                        in the specified URLs.
                                      type: boolean
                                    collection:
                                      description: Human-readable label that identifies
                                        the collection in the database.
                                      type: string
                                    collectionRegex:
                                      description: Regex pattern to use for creating
                                        the wildcard (*) collection.
                                      type: string
                                    database:
                                      description: Human-readable label that identifies
                                        the database, which contains the collection
                                        in the cluster.
                                      type: string
                                    databaseRegex:
                                      description: Regex pattern to use for creating
                                        the wildcard database.
                                      type: string
                                    datasetName:
                                      description: Human-readable label that identifies
                                        the dataset that Atlas generates for an ingestion
                                        pipeline run or Online Archive.
                                      type: string
                                    defaultFormat:
                                      description: Default format that Data Lake assumes
                                        if it encounters a file without an extension
                                        while searching the storeName.
                                      type: string
                                    path:
                                      description: File path that controls how MongoDB
                                        Cloud searches for and parses files in the
                                        storeName before mapping them to a collection.
                                        Specify / to capture all files and folders
                                        from the prefix path.
                                      type: string
                                    provenanceFieldName:
                                      description: Name for the field that includes
                                        the provenance of the documents in the results.
                                      type: string
                                    storeName:
                                      description: Name of a data store to map to
                                        the <collection>. Must match the name of an
                                        object in the stores array.
                                      type: string
                                    urls:
                                      description: Comma-separated list of publicly
                                        accessible HTTP URLs where data is stored.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              name:
                                description: Human-readable label of the tag.
                                type: string
                            type: object
                          type: array
                        maxWildcardCollections:
                          type: number
                        name:
                          description: Human-readable label of the tag.
                          type: string
                        views:
                          description: Array of objects where each object represents
                            an aggregation pipeline on a collection. To learn more
                            about views, see Views.
                          items:
                            properties:
                              name:
                                description: Human-readable label of the tag.
                                type: string
                              pipeline:
                                description: Aggregation pipeline stage(s) to apply
                                  to the source collection.
                                type: string
                              source:
                                description: Name of the source collection for the
                                  view.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  storageStores:
                    description: Each object in the array represents a data store.
                      Federated Database uses the storage.databases configuration
                      details to map data in each data store to queryable databases
                      and collections. For complete documentation on this object and
                      its nested fields, see stores. An empty object indicates that
                      the Federated Database Instance has no configured data stores.
                    items:
                      properties:
                        additionalStorageClasses:
                          items:
                            type: string
                          type: array
                        allowInsecure:
                          description: Flag that validates the scheme in the specified
                            URLs.
                          type: boolean
                        bucket:
                          description: Name of the AWS S3 bucket.
                          type: string
                        clusterId:
                          description: ID of the Cluster the Online Archive belongs
                            to.
                          type: string
                        clusterName:
                          description: Human-readable label of the MongoDB Cloud cluster
                            on which the store is based.
                          type: string
                        defaultFormat:
                          description: Default format that Data Lake assumes if it
                            encounters a file without an extension while searching
                            the storeName.
                          type: string
                        delimiter:
                          description: The delimiter that separates storage_databases.#.collections.#.data_sources.#.path
                            segments in the data store.
                          type: string
                        includeTags:
                          description: Determines whether or not to use S3 tags on
                            the files in the given path as additional partition attributes.
                          type: boolean
                        name:
                          description: Human-readable label of the tag.
                          type: string
                        prefix:
                          description: Prefix the Federated Database Instance applies
                            when searching for files in the S3 bucket.
                          type: string
                        projectId:
                          description: The unique ID for the project to create a Federated
                            Database Instance.
                          type: string
                        provider:
                          description: Defines where the data is stored.
                          type: string
                        public:
                          description: Flag that indicates whether the bucket is public.
                          type: string
                        readPreference:
                          description: MongoDB Cloud cluster read preference, which
                            describes how to route read requests to the cluster.
                          items:
                            properties:
                              maxStalenessSeconds:
                                type: number
                              mode:
                                description: Read preference mode that specifies to
                                  which replica set member to route the read requests.
                                type: string
                              tagSets:
                                description: List that contains tag sets or tag specification
                                  documents.
                                items:
                                  properties:
                                    tags:
                                      description: List of all tags within a tag set
                                      items:
                                        properties:
                                          name:
                                            description: Human-readable label of the
                                              tag.
                                            type: string
                                          value:
                                            description: Value of the tag.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                        region:
                          description: Name of the AWS region in which the S3 bucket
                            is hosted.
                          type: string
                        urls:
                          description: Comma-separated list of publicly accessible
                            HTTP URLs where data is stored.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
