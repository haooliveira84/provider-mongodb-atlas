---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: backupsnapshotrestorejobs.cloud.mongodbatlas.crossplane.io
spec:
  group: cloud.mongodbatlas.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - mongodbatlas
    kind: BackupSnapshotRestoreJob
    listKind: BackupSnapshotRestoreJobList
    plural: backupsnapshotrestorejobs
    singular: backupsnapshotrestorejob
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BackupSnapshotRestoreJob is the Schema for the BackupSnapshotRestoreJobs
          API. Provides a Cloud Backup Snapshot Restore Job resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BackupSnapshotRestoreJobSpec defines the desired state of
              BackupSnapshotRestoreJob
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicy field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  clusterName:
                    description: The name of the Atlas cluster whose snapshot you
                      want to restore.
                    type: string
                  deliveryType:
                    additionalProperties:
                      type: string
                    type: object
                  deliveryTypeConfig:
                    description: 'Type of restore job to create. Possible configurations
                      are: download, automated, or pointInTime only one must be set
                      it in true.'
                    items:
                      properties:
                        automated:
                          description: Set to true to use the automated configuration.
                          type: boolean
                        download:
                          description: Set to true to use the download configuration.
                          type: boolean
                        oplogInc:
                          description: Optional setting for pointInTime configuration.
                            Oplog operation number from which to you want to restore
                            this snapshot. This is the second part of an Oplog timestamp.
                            Used in conjunction with oplog_ts.
                          type: number
                        oplogTs:
                          description: Optional setting for pointInTime configuration.
                            Timestamp in the number of seconds that have elapsed since
                            the UNIX epoch from which to you want to restore this
                            snapshot. This is the first part of an Oplog timestamp.
                          type: number
                        pointInTime:
                          type: boolean
                        pointInTimeUtcSeconds:
                          description: Optional setting for pointInTime configuration.
                            Timestamp in the number of seconds that have elapsed since
                            the UNIX epoch from which you want to restore this snapshot.
                            Used instead of oplog settings.
                          type: number
                        targetClusterName:
                          description: Name of the target Atlas cluster to which the
                            restore job restores the snapshot. Required for automated
                            and pointInTime.
                          type: string
                        targetProjectId:
                          description: Name of the target Atlas cluster to which the
                            restore job restores the snapshot. Required for automated
                            and pointInTime.
                          type: string
                      type: object
                    type: array
                  projectId:
                    description: The unique identifier of the project for the Atlas
                      cluster whose snapshot you want to restore.
                    type: string
                  snapshotId:
                    description: Unique identifier of the snapshot to restore.
                    type: string
                type: object
              managementPolicy:
                default: FullControl
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicy
                  specifies the level of control Crossplane has over the managed external
                  resource. This field is planned to replace the DeletionPolicy field
                  in a future release. Currently, both could be set independently
                  and non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - FullControl
                - ObserveOnly
                - OrphanOnDelete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: clusterName is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.clusterName)
            - message: projectId is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.projectId)
            - message: snapshotId is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.snapshotId)
          status:
            description: BackupSnapshotRestoreJobStatus defines the observed state
              of BackupSnapshotRestoreJob.
            properties:
              atProvider:
                properties:
                  cancelled:
                    description: Indicates whether the restore job was canceled.
                    type: boolean
                  clusterName:
                    description: The name of the Atlas cluster whose snapshot you
                      want to restore.
                    type: string
                  createdAt:
                    description: UTC ISO 8601 formatted point in time when Atlas created
                      the restore job.
                    type: string
                  deliveryType:
                    additionalProperties:
                      type: string
                    type: object
                  deliveryTypeConfig:
                    description: 'Type of restore job to create. Possible configurations
                      are: download, automated, or pointInTime only one must be set
                      it in true.'
                    items:
                      properties:
                        automated:
                          description: Set to true to use the automated configuration.
                          type: boolean
                        download:
                          description: Set to true to use the download configuration.
                          type: boolean
                        oplogInc:
                          description: Optional setting for pointInTime configuration.
                            Oplog operation number from which to you want to restore
                            this snapshot. This is the second part of an Oplog timestamp.
                            Used in conjunction with oplog_ts.
                          type: number
                        oplogTs:
                          description: Optional setting for pointInTime configuration.
                            Timestamp in the number of seconds that have elapsed since
                            the UNIX epoch from which to you want to restore this
                            snapshot. This is the first part of an Oplog timestamp.
                          type: number
                        pointInTime:
                          type: boolean
                        pointInTimeUtcSeconds:
                          description: Optional setting for pointInTime configuration.
                            Timestamp in the number of seconds that have elapsed since
                            the UNIX epoch from which you want to restore this snapshot.
                            Used instead of oplog settings.
                          type: number
                        targetClusterName:
                          description: Name of the target Atlas cluster to which the
                            restore job restores the snapshot. Required for automated
                            and pointInTime.
                          type: string
                        targetProjectId:
                          description: Name of the target Atlas cluster to which the
                            restore job restores the snapshot. Required for automated
                            and pointInTime.
                          type: string
                      type: object
                    type: array
                  deliveryUrl:
                    description: One or more URLs for the compressed snapshot files
                      for manual download. Only visible if deliveryType is download.
                    items:
                      type: string
                    type: array
                  expired:
                    description: Indicates whether the restore job expired.
                    type: boolean
                  expiresAt:
                    description: UTC ISO 8601 formatted point in time when the restore
                      job expires.
                    type: string
                  finishedAt:
                    description: UTC ISO 8601 formatted point in time when the restore
                      job completed.
                    type: string
                  id:
                    type: string
                  projectId:
                    description: The unique identifier of the project for the Atlas
                      cluster whose snapshot you want to restore.
                    type: string
                  snapshotId:
                    description: Unique identifier of the snapshot to restore.
                    type: string
                  snapshotRestoreJobId:
                    description: The unique identifier of the restore job.
                    type: string
                  timestamp:
                    description: Timestamp in ISO 8601 date and time format in UTC
                      when the snapshot associated to snapshotId was taken.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
