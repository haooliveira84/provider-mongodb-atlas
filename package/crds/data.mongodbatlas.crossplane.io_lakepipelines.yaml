---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: lakepipelines.data.mongodbatlas.crossplane.io
spec:
  group: data.mongodbatlas.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - mongodbatlas
    kind: LakePipeline
    listKind: LakePipelineList
    plural: lakepipelines
    singular: lakepipeline
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LakePipeline is the Schema for the LakePipelines API. Provides
          a Data Lake Pipeline resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LakePipelineSpec defines the desired state of LakePipeline
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicy field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  projectId:
                    description: The unique ID for the project to create a data lake
                      pipeline.
                    type: string
                  sink:
                    items:
                      properties:
                        partitionFields:
                          description: Ordered fields used to physically organize
                            data in the destination.
                          items:
                            properties:
                              fieldName:
                                description: Human-readable label that identifies
                                  the field name used to partition data.
                                type: string
                              order:
                                description: Sequence in which MongoDB Atlas slices
                                  the collection data to create partitions. The resource
                                  expresses this sequence starting with zero.
                                type: number
                            required:
                            - fieldName
                            - order
                            type: object
                          type: array
                        provider:
                          description: Human-readable label that identifies the cloud
                            provider that stores this snapshot.
                          type: string
                        region:
                          description: Target cloud provider region for this Data
                            Lake Pipeline. Supported cloud provider regions.
                          type: string
                        type:
                          description: Type of ingestion destination of this Data
                            Lake Pipeline.
                          type: string
                      type: object
                    type: array
                  source:
                    items:
                      properties:
                        clusterName:
                          description: Human-readable name that identifies the cluster.
                          type: string
                        collectionName:
                          description: Human-readable name that identifies the collection.
                          type: string
                        databaseName:
                          description: Human-readable name that identifies the database.
                          type: string
                        policyItemId:
                          description: Unique 24-hexadecimal digit string that identifies
                            the Data Lake Pipeline.
                          type: string
                        projectId:
                          description: The unique ID for the project to create a data
                            lake pipeline.
                          type: string
                        type:
                          description: Type of ingestion destination of this Data
                            Lake Pipeline.
                          type: string
                      type: object
                    type: array
                  transformations:
                    description: Fields to be excluded for this Data Lake Pipeline.
                    items:
                      properties:
                        field:
                          description: Key in the document.
                          type: string
                        type:
                          description: Type of ingestion destination of this Data
                            Lake Pipeline.
                          type: string
                      type: object
                    type: array
                type: object
              managementPolicy:
                default: FullControl
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicy
                  specifies the level of control Crossplane has over the managed external
                  resource. This field is planned to replace the DeletionPolicy field
                  in a future release. Currently, both could be set independently
                  and non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - FullControl
                - ObserveOnly
                - OrphanOnDelete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: projectId is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.projectId)
          status:
            description: LakePipelineStatus defines the observed state of LakePipeline.
            properties:
              atProvider:
                properties:
                  createdDate:
                    description: Timestamp that indicates when the Data Lake Pipeline
                      was created.
                    type: string
                  id:
                    description: Unique 24-hexadecimal digit string that identifies
                      the Data Lake Pipeline.
                    type: string
                  ingestionSchedules:
                    description: List of backup schedule policy items that you can
                      use as a Data Lake Pipeline source.
                    items:
                      properties:
                        frequencyInterval:
                          description: Number that indicates the frequency interval
                            for a set of snapshots.
                          type: number
                        frequencyType:
                          description: Human-readable label that identifies how often
                            this snapshot triggers.
                          type: string
                        id:
                          description: Unique 24-hexadecimal digit string that identifies
                            the snapshot.
                          type: string
                        retentionUnit:
                          description: Unit of time in which MongoDB Atlas measures
                            snapshot retention.
                          type: string
                        retentionValue:
                          description: Duration in days, weeks, or months that MongoDB
                            Atlas retains the snapshot.
                          type: number
                      type: object
                    type: array
                  lastUpdatedDate:
                    description: Timestamp that indicates the last time that the Data
                      Lake Pipeline was updated.
                    type: string
                  projectId:
                    description: The unique ID for the project to create a data lake
                      pipeline.
                    type: string
                  sink:
                    items:
                      properties:
                        partitionFields:
                          description: Ordered fields used to physically organize
                            data in the destination.
                          items:
                            properties:
                              fieldName:
                                description: Human-readable label that identifies
                                  the field name used to partition data.
                                type: string
                              order:
                                description: Sequence in which MongoDB Atlas slices
                                  the collection data to create partitions. The resource
                                  expresses this sequence starting with zero.
                                type: number
                            type: object
                          type: array
                        provider:
                          description: Human-readable label that identifies the cloud
                            provider that stores this snapshot.
                          type: string
                        region:
                          description: Target cloud provider region for this Data
                            Lake Pipeline. Supported cloud provider regions.
                          type: string
                        type:
                          description: Type of ingestion destination of this Data
                            Lake Pipeline.
                          type: string
                      type: object
                    type: array
                  snapshots:
                    description: List of backup snapshots that you can use to trigger
                      an on demand pipeline run.
                    items:
                      properties:
                        copyRegion:
                          description: List that identifies the regions to which MongoDB
                            Atlas copies the snapshot.
                          type: string
                        createdAt:
                          description: Date and time when MongoDB Atlas took the snapshot.
                          type: string
                        expiresAt:
                          description: Date and time when MongoDB Atlas deletes the
                            snapshot.
                          type: string
                        frequencyYype:
                          type: string
                        id:
                          description: Unique 24-hexadecimal digit string that identifies
                            the snapshot.
                          type: string
                        masterKey:
                          description: Unique string that identifies the Amazon Web
                            Services (AWS) Key Management Service (KMS) Customer Master
                            Key (CMK) used to encrypt the snapshot.
                          type: string
                        mongodVersion:
                          description: Version of the MongoDB host that this snapshot
                            backs up.
                          type: string
                        policies:
                          description: List that contains unique identifiers for the
                            policy items.
                          items:
                            type: string
                          type: array
                        provider:
                          description: Human-readable label that identifies the cloud
                            provider that stores this snapshot.
                          type: string
                        replicaSetName:
                          description: Human-readable label that identifies the replica
                            set from which MongoDB Atlas took this snapshot.
                          type: string
                        size:
                          description: List of backup snapshots that you can use to
                            trigger an on demand pipeline run.
                          type: number
                        snapshotType:
                          description: Human-readable label that identifies when this
                            snapshot triggers.
                          type: string
                        status:
                          description: Human-readable label that indicates the stage
                            of the backup process for this snapshot.
                          type: string
                        type:
                          description: Type of ingestion destination of this Data
                            Lake Pipeline.
                          type: string
                      type: object
                    type: array
                  source:
                    items:
                      properties:
                        clusterName:
                          description: Human-readable name that identifies the cluster.
                          type: string
                        collectionName:
                          description: Human-readable name that identifies the collection.
                          type: string
                        databaseName:
                          description: Human-readable name that identifies the database.
                          type: string
                        policyItemId:
                          description: Unique 24-hexadecimal digit string that identifies
                            the Data Lake Pipeline.
                          type: string
                        projectId:
                          description: The unique ID for the project to create a data
                            lake pipeline.
                          type: string
                        type:
                          description: Type of ingestion destination of this Data
                            Lake Pipeline.
                          type: string
                      type: object
                    type: array
                  state:
                    description: State of this Data Lake Pipeline.
                    type: string
                  transformations:
                    description: Fields to be excluded for this Data Lake Pipeline.
                    items:
                      properties:
                        field:
                          description: Key in the document.
                          type: string
                        type:
                          description: Type of ingestion destination of this Data
                            Lake Pipeline.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
