---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: projects.mongodbatlas.mongodbatlas.crossplane.io
spec:
  group: mongodbatlas.mongodbatlas.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - mongodbatlas
    kind: Project
    listKind: ProjectList
    plural: projects
    singular: project
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Project is the Schema for the Projects API. Provides a Project
          resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProjectSpec defines the desired state of Project
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicy field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  apiKeys:
                    items:
                      properties:
                        apiKeyId:
                          description: 'The unique identifier of the Programmatic
                            API key you want to associate with the Project.  The Programmatic
                            API key and Project must share the same parent organization.  Note:
                            this is not the publicKey of the Programmatic API key
                            but the id of the key. See Programmatic API Keys for more.'
                          type: string
                        roleNames:
                          description: Each string in the array represents a project
                            role you want to assign to the team. Every user associated
                            with the team inherits these roles. You must specify an
                            array even if you are only associating a single role with
                            the team. The MongoDB Documentation describes the roles
                            a user can have.
                          items:
                            type: string
                          type: array
                      required:
                      - apiKeyId
                      - roleNames
                      type: object
                    type: array
                  isCollectDatabaseSpecificsStatisticsEnabled:
                    description: Flag that indicates whether to enable statistics
                      in cluster metrics collection for the project.
                    type: boolean
                  isDataExplorerEnabled:
                    description: Flag that indicates whether to enable Data Explorer
                      for the project. If enabled, you can query your database with
                      an easy to use interface.  When Data Explorer is disabled, you
                      cannot terminate slow operations from the Real-Time Performance
                      Panel or create indexes from the Performance Advisor. You can
                      still view Performance Advisor recommendations, but you must
                      create those indexes from mongosh.
                    type: boolean
                  isExtendedStorageSizesEnabled:
                    description: Flag that indicates whether to enable extended storage
                      sizes for the specified project. Clusters with extended storage
                      sizes must be on AWS or GCP, and cannot span multiple regions.
                      When extending storage size, initial syncs and cross-project
                      snapshot restores will be slow. This setting should only be
                      used as a measure of temporary relief; consider sharding if
                      more storage is required.
                    type: boolean
                  isPerformanceAdvisorEnabled:
                    description: Flag that indicates whether to enable Performance
                      Advisor and Profiler for the project. If enabled, you can analyze
                      database logs to recommend performance improvements.
                    type: boolean
                  isRealtimePerformancePanelEnabled:
                    description: Flag that indicates whether to enable Real Time Performance
                      Panel for the project. If enabled, you can see real time metrics
                      from your MongoDB database.
                    type: boolean
                  isSchemaAdvisorEnabled:
                    description: Flag that indicates whether to enable Schema Advisor
                      for the project. If enabled, you receive customized recommendations
                      to optimize your data model and enhance performance. Disable
                      this setting to disable schema suggestions in the Performance
                      Advisor and the Data Explorer.
                    type: boolean
                  limits:
                    items:
                      properties:
                        name:
                          description: The name of the project you want to create.
                          type: string
                        value:
                          description: Amount to set the limit to. Use the Project
                            Limit Documentation under limitName parameter to verify
                            the override limits.
                          type: number
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  name:
                    description: The name of the project you want to create.
                    type: string
                  orgId:
                    description: The ID of the organization you want to create the
                      project within.
                    type: string
                  projectOwnerId:
                    description: Unique 24-hexadecimal digit string that identifies
                      the Atlas user account to be granted the Project Owner role
                      on the specified project. If you set this parameter, it overrides
                      the default value of the oldest Organization Owner.
                    type: string
                  regionUsageRestrictions:
                    description: Designates that this project can be used for government
                      regions only.  If not set the project will default to standard
                      regions.   You cannot deploy clusters across government and
                      standard regions in the same project. AWS is the only cloud
                      provider for AtlasGov.  For more information see MongoDB Atlas
                      for Government.
                    type: string
                  teams:
                    items:
                      properties:
                        roleNames:
                          description: Each string in the array represents a project
                            role you want to assign to the team. Every user associated
                            with the team inherits these roles. You must specify an
                            array even if you are only associating a single role with
                            the team. The MongoDB Documentation describes the roles
                            a user can have.
                          items:
                            type: string
                          type: array
                        teamId:
                          description: The unique identifier of the team you want
                            to associate with the project. The team and project must
                            share the same parent organization.
                          type: string
                      required:
                      - roleNames
                      - teamId
                      type: object
                    type: array
                  withDefaultAlertsSettings:
                    description: It allows users to disable the creation of the default
                      alert settings. By default, this flag is set to true.
                    type: boolean
                type: object
              managementPolicy:
                default: FullControl
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicy
                  specifies the level of control Crossplane has over the managed external
                  resource. This field is planned to replace the DeletionPolicy field
                  in a future release. Currently, both could be set independently
                  and non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - FullControl
                - ObserveOnly
                - OrphanOnDelete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: name is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)
            - message: orgId is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.orgId)
          status:
            description: ProjectStatus defines the observed state of Project.
            properties:
              atProvider:
                properties:
                  apiKeys:
                    items:
                      properties:
                        apiKeyId:
                          description: 'The unique identifier of the Programmatic
                            API key you want to associate with the Project.  The Programmatic
                            API key and Project must share the same parent organization.  Note:
                            this is not the publicKey of the Programmatic API key
                            but the id of the key. See Programmatic API Keys for more.'
                          type: string
                        roleNames:
                          description: Each string in the array represents a project
                            role you want to assign to the team. Every user associated
                            with the team inherits these roles. You must specify an
                            array even if you are only associating a single role with
                            the team. The MongoDB Documentation describes the roles
                            a user can have.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  clusterCount:
                    description: The number of Atlas clusters deployed in the project..
                    type: number
                  created:
                    description: The ISO-8601-formatted timestamp of when Atlas created
                      the project..
                    type: string
                  id:
                    description: The project id.
                    type: string
                  isCollectDatabaseSpecificsStatisticsEnabled:
                    description: Flag that indicates whether to enable statistics
                      in cluster metrics collection for the project.
                    type: boolean
                  isDataExplorerEnabled:
                    description: Flag that indicates whether to enable Data Explorer
                      for the project. If enabled, you can query your database with
                      an easy to use interface.  When Data Explorer is disabled, you
                      cannot terminate slow operations from the Real-Time Performance
                      Panel or create indexes from the Performance Advisor. You can
                      still view Performance Advisor recommendations, but you must
                      create those indexes from mongosh.
                    type: boolean
                  isExtendedStorageSizesEnabled:
                    description: Flag that indicates whether to enable extended storage
                      sizes for the specified project. Clusters with extended storage
                      sizes must be on AWS or GCP, and cannot span multiple regions.
                      When extending storage size, initial syncs and cross-project
                      snapshot restores will be slow. This setting should only be
                      used as a measure of temporary relief; consider sharding if
                      more storage is required.
                    type: boolean
                  isPerformanceAdvisorEnabled:
                    description: Flag that indicates whether to enable Performance
                      Advisor and Profiler for the project. If enabled, you can analyze
                      database logs to recommend performance improvements.
                    type: boolean
                  isRealtimePerformancePanelEnabled:
                    description: Flag that indicates whether to enable Real Time Performance
                      Panel for the project. If enabled, you can see real time metrics
                      from your MongoDB database.
                    type: boolean
                  isSchemaAdvisorEnabled:
                    description: Flag that indicates whether to enable Schema Advisor
                      for the project. If enabled, you receive customized recommendations
                      to optimize your data model and enhance performance. Disable
                      this setting to disable schema suggestions in the Performance
                      Advisor and the Data Explorer.
                    type: boolean
                  limits:
                    items:
                      properties:
                        currentUsage:
                          type: number
                        defaultLimit:
                          type: number
                        maximumLimit:
                          type: number
                        name:
                          description: The name of the project you want to create.
                          type: string
                        value:
                          description: Amount to set the limit to. Use the Project
                            Limit Documentation under limitName parameter to verify
                            the override limits.
                          type: number
                      type: object
                    type: array
                  name:
                    description: The name of the project you want to create.
                    type: string
                  orgId:
                    description: The ID of the organization you want to create the
                      project within.
                    type: string
                  projectOwnerId:
                    description: Unique 24-hexadecimal digit string that identifies
                      the Atlas user account to be granted the Project Owner role
                      on the specified project. If you set this parameter, it overrides
                      the default value of the oldest Organization Owner.
                    type: string
                  regionUsageRestrictions:
                    description: Designates that this project can be used for government
                      regions only.  If not set the project will default to standard
                      regions.   You cannot deploy clusters across government and
                      standard regions in the same project. AWS is the only cloud
                      provider for AtlasGov.  For more information see MongoDB Atlas
                      for Government.
                    type: string
                  teams:
                    items:
                      properties:
                        roleNames:
                          description: Each string in the array represents a project
                            role you want to assign to the team. Every user associated
                            with the team inherits these roles. You must specify an
                            array even if you are only associating a single role with
                            the team. The MongoDB Documentation describes the roles
                            a user can have.
                          items:
                            type: string
                          type: array
                        teamId:
                          description: The unique identifier of the team you want
                            to associate with the project. The team and project must
                            share the same parent organization.
                          type: string
                      type: object
                    type: array
                  withDefaultAlertsSettings:
                    description: It allows users to disable the creation of the default
                      alert settings. By default, this flag is set to true.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
