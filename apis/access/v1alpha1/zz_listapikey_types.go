/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ListAPIKeyObservation struct {

	// Unique identifier for the Organization API Key for which you want to create a new access list entry.
	APIKeyID *string `json:"apiKeyId,omitempty" tf:"api_key_id,omitempty"`

	// Range of IP addresses in CIDR notation to be added to the access list. Your access list entry can include only one cidrBlock, or one ipAddress.
	CidrBlock *string `json:"cidrBlock,omitempty" tf:"cidr_block,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Single IP address to be added to the access list.
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgID *string `json:"orgId,omitempty" tf:"org_id,omitempty"`
}

type ListAPIKeyParameters struct {

	// Unique identifier for the Organization API Key for which you want to create a new access list entry.
	// +kubebuilder:validation:Optional
	APIKeyID *string `json:"apiKeyId,omitempty" tf:"api_key_id,omitempty"`

	// Range of IP addresses in CIDR notation to be added to the access list. Your access list entry can include only one cidrBlock, or one ipAddress.
	// +kubebuilder:validation:Optional
	CidrBlock *string `json:"cidrBlock,omitempty" tf:"cidr_block,omitempty"`

	// Single IP address to be added to the access list.
	// +kubebuilder:validation:Optional
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	// +kubebuilder:validation:Optional
	OrgID *string `json:"orgId,omitempty" tf:"org_id,omitempty"`
}

// ListAPIKeySpec defines the desired state of ListAPIKey
type ListAPIKeySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ListAPIKeyParameters `json:"forProvider"`
}

// ListAPIKeyStatus defines the observed state of ListAPIKey.
type ListAPIKeyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ListAPIKeyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ListAPIKey is the Schema for the ListAPIKeys API. Creates the access list entries for the specified Atlas Organization API Key.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,mongodbatlas}
type ListAPIKey struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.apiKeyId)",message="apiKeyId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.orgId)",message="orgId is a required parameter"
	Spec   ListAPIKeySpec   `json:"spec"`
	Status ListAPIKeyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ListAPIKeyList contains a list of ListAPIKeys
type ListAPIKeyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ListAPIKey `json:"items"`
}

// Repository type metadata.
var (
	ListAPIKey_Kind             = "ListAPIKey"
	ListAPIKey_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ListAPIKey_Kind}.String()
	ListAPIKey_KindAPIVersion   = ListAPIKey_Kind + "." + CRDGroupVersion.String()
	ListAPIKey_GroupVersionKind = CRDGroupVersion.WithKind(ListAPIKey_Kind)
)

func init() {
	SchemeBuilder.Register(&ListAPIKey{}, &ListAPIKeyList{})
}
