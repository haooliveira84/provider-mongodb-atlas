/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AdvancedConfigurationObservation struct {

	// Default level of acknowledgment requested from MongoDB for read operations set for this cluster. MongoDB 4.4 clusters default to available.
	DefaultReadConcern *string `json:"defaultReadConcern,omitempty" tf:"default_read_concern,omitempty"`

	// Default level of acknowledgment requested from MongoDB for write operations set for this cluster. MongoDB 4.4 clusters default to 1.
	DefaultWriteConcern *string `json:"defaultWriteConcern,omitempty" tf:"default_write_concern,omitempty"`

	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong *bool `json:"failIndexKeyTooLong,omitempty" tf:"fail_index_key_too_long,omitempty"`

	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled *bool `json:"javascriptEnabled,omitempty" tf:"javascript_enabled,omitempty"`

	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTLSProtocol *string `json:"minimumEnabledTlsProtocol,omitempty" tf:"minimum_enabled_tls_protocol,omitempty"`

	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan *bool `json:"noTableScan,omitempty" tf:"no_table_scan,omitempty"`

	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	OplogMinRetentionHours *float64 `json:"oplogMinRetentionHours,omitempty" tf:"oplog_min_retention_hours,omitempty"`

	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb *float64 `json:"oplogSizeMb,omitempty" tf:"oplog_size_mb,omitempty"`

	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector *float64 `json:"sampleRefreshIntervalBiConnector,omitempty" tf:"sample_refresh_interval_bi_connector,omitempty"`

	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector *float64 `json:"sampleSizeBiConnector,omitempty" tf:"sample_size_bi_connector,omitempty"`

	// Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
	TransactionLifetimeLimitSeconds *float64 `json:"transactionLifetimeLimitSeconds,omitempty" tf:"transaction_lifetime_limit_seconds,omitempty"`
}

type AdvancedConfigurationParameters struct {

	// Default level of acknowledgment requested from MongoDB for read operations set for this cluster. MongoDB 4.4 clusters default to available.
	// +kubebuilder:validation:Optional
	DefaultReadConcern *string `json:"defaultReadConcern,omitempty" tf:"default_read_concern,omitempty"`

	// Default level of acknowledgment requested from MongoDB for write operations set for this cluster. MongoDB 4.4 clusters default to 1.
	// +kubebuilder:validation:Optional
	DefaultWriteConcern *string `json:"defaultWriteConcern,omitempty" tf:"default_write_concern,omitempty"`

	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	// +kubebuilder:validation:Optional
	FailIndexKeyTooLong *bool `json:"failIndexKeyTooLong,omitempty" tf:"fail_index_key_too_long,omitempty"`

	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	// +kubebuilder:validation:Optional
	JavascriptEnabled *bool `json:"javascriptEnabled,omitempty" tf:"javascript_enabled,omitempty"`

	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	// +kubebuilder:validation:Optional
	MinimumEnabledTLSProtocol *string `json:"minimumEnabledTlsProtocol,omitempty" tf:"minimum_enabled_tls_protocol,omitempty"`

	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	// +kubebuilder:validation:Optional
	NoTableScan *bool `json:"noTableScan,omitempty" tf:"no_table_scan,omitempty"`

	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	// +kubebuilder:validation:Optional
	OplogMinRetentionHours *float64 `json:"oplogMinRetentionHours,omitempty" tf:"oplog_min_retention_hours,omitempty"`

	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	// +kubebuilder:validation:Optional
	OplogSizeMb *float64 `json:"oplogSizeMb,omitempty" tf:"oplog_size_mb,omitempty"`

	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	// +kubebuilder:validation:Optional
	SampleRefreshIntervalBiConnector *float64 `json:"sampleRefreshIntervalBiConnector,omitempty" tf:"sample_refresh_interval_bi_connector,omitempty"`

	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	// +kubebuilder:validation:Optional
	SampleSizeBiConnector *float64 `json:"sampleSizeBiConnector,omitempty" tf:"sample_size_bi_connector,omitempty"`

	// Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
	// +kubebuilder:validation:Optional
	TransactionLifetimeLimitSeconds *float64 `json:"transactionLifetimeLimitSeconds,omitempty" tf:"transaction_lifetime_limit_seconds,omitempty"`
}

type AnalyticsAutoScalingObservation struct {

	// Flag that indicates whether instance size auto-scaling is enabled. This parameter defaults to false.
	ComputeEnabled *bool `json:"computeEnabled,omitempty" tf:"compute_enabled,omitempty"`

	// Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled is true.
	ComputeMaxInstanceSize *string `json:"computeMaxInstanceSize,omitempty" tf:"compute_max_instance_size,omitempty"`

	// Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if replication_specs.#.region_configs.#.auto_scaling.0.compute_scale_down_enabled is true.
	ComputeMinInstanceSize *string `json:"computeMinInstanceSize,omitempty" tf:"compute_min_instance_size,omitempty"`

	// Flag that indicates whether the instance size may scale down. Atlas requires this parameter if replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled : true. If you enable this option, specify a value for replication_specs.#.region_configs.#.auto_scaling.0.compute_min_instance_size.
	ComputeScaleDownEnabled *bool `json:"computeScaleDownEnabled,omitempty" tf:"compute_scale_down_enabled,omitempty"`

	// Flag that indicates whether this cluster enables disk auto-scaling. This parameter defaults to true.
	DiskGbEnabled *bool `json:"diskGbEnabled,omitempty" tf:"disk_gb_enabled,omitempty"`
}

type AnalyticsAutoScalingParameters struct {

	// Flag that indicates whether instance size auto-scaling is enabled. This parameter defaults to false.
	// +kubebuilder:validation:Optional
	ComputeEnabled *bool `json:"computeEnabled,omitempty" tf:"compute_enabled,omitempty"`

	// Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled is true.
	// +kubebuilder:validation:Optional
	ComputeMaxInstanceSize *string `json:"computeMaxInstanceSize,omitempty" tf:"compute_max_instance_size,omitempty"`

	// Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if replication_specs.#.region_configs.#.auto_scaling.0.compute_scale_down_enabled is true.
	// +kubebuilder:validation:Optional
	ComputeMinInstanceSize *string `json:"computeMinInstanceSize,omitempty" tf:"compute_min_instance_size,omitempty"`

	// Flag that indicates whether the instance size may scale down. Atlas requires this parameter if replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled : true. If you enable this option, specify a value for replication_specs.#.region_configs.#.auto_scaling.0.compute_min_instance_size.
	// +kubebuilder:validation:Optional
	ComputeScaleDownEnabled *bool `json:"computeScaleDownEnabled,omitempty" tf:"compute_scale_down_enabled,omitempty"`

	// Flag that indicates whether this cluster enables disk auto-scaling. This parameter defaults to true.
	// +kubebuilder:validation:Optional
	DiskGbEnabled *bool `json:"diskGbEnabled,omitempty" tf:"disk_gb_enabled,omitempty"`
}

type AnalyticsSpecsObservation struct {

	// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
	DiskIops *float64 `json:"diskIops,omitempty" tf:"disk_iops,omitempty"`

	// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
	EBSVolumeType *string `json:"ebsVolumeType,omitempty" tf:"ebs_volume_type,omitempty"`

	// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
	InstanceSize *string `json:"instanceSize,omitempty" tf:"instance_size,omitempty"`

	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	NodeCount *float64 `json:"nodeCount,omitempty" tf:"node_count,omitempty"`
}

type AnalyticsSpecsParameters struct {

	// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
	// +kubebuilder:validation:Optional
	DiskIops *float64 `json:"diskIops,omitempty" tf:"disk_iops,omitempty"`

	// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
	// +kubebuilder:validation:Optional
	EBSVolumeType *string `json:"ebsVolumeType,omitempty" tf:"ebs_volume_type,omitempty"`

	// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
	// +kubebuilder:validation:Required
	InstanceSize *string `json:"instanceSize" tf:"instance_size,omitempty"`

	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	// +kubebuilder:validation:Optional
	NodeCount *float64 `json:"nodeCount,omitempty" tf:"node_count,omitempty"`
}

type AutoScalingObservation struct {

	// Flag that indicates whether instance size auto-scaling is enabled. This parameter defaults to false.
	ComputeEnabled *bool `json:"computeEnabled,omitempty" tf:"compute_enabled,omitempty"`

	// Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled is true.
	ComputeMaxInstanceSize *string `json:"computeMaxInstanceSize,omitempty" tf:"compute_max_instance_size,omitempty"`

	// Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if replication_specs.#.region_configs.#.auto_scaling.0.compute_scale_down_enabled is true.
	ComputeMinInstanceSize *string `json:"computeMinInstanceSize,omitempty" tf:"compute_min_instance_size,omitempty"`

	// Flag that indicates whether the instance size may scale down. Atlas requires this parameter if replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled : true. If you enable this option, specify a value for replication_specs.#.region_configs.#.auto_scaling.0.compute_min_instance_size.
	ComputeScaleDownEnabled *bool `json:"computeScaleDownEnabled,omitempty" tf:"compute_scale_down_enabled,omitempty"`

	// Flag that indicates whether this cluster enables disk auto-scaling. This parameter defaults to true.
	DiskGbEnabled *bool `json:"diskGbEnabled,omitempty" tf:"disk_gb_enabled,omitempty"`
}

type AutoScalingParameters struct {

	// Flag that indicates whether instance size auto-scaling is enabled. This parameter defaults to false.
	// +kubebuilder:validation:Optional
	ComputeEnabled *bool `json:"computeEnabled,omitempty" tf:"compute_enabled,omitempty"`

	// Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled is true.
	// +kubebuilder:validation:Optional
	ComputeMaxInstanceSize *string `json:"computeMaxInstanceSize,omitempty" tf:"compute_max_instance_size,omitempty"`

	// Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if replication_specs.#.region_configs.#.auto_scaling.0.compute_scale_down_enabled is true.
	// +kubebuilder:validation:Optional
	ComputeMinInstanceSize *string `json:"computeMinInstanceSize,omitempty" tf:"compute_min_instance_size,omitempty"`

	// Flag that indicates whether the instance size may scale down. Atlas requires this parameter if replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled : true. If you enable this option, specify a value for replication_specs.#.region_configs.#.auto_scaling.0.compute_min_instance_size.
	// +kubebuilder:validation:Optional
	ComputeScaleDownEnabled *bool `json:"computeScaleDownEnabled,omitempty" tf:"compute_scale_down_enabled,omitempty"`

	// Flag that indicates whether this cluster enables disk auto-scaling. This parameter defaults to true.
	// +kubebuilder:validation:Optional
	DiskGbEnabled *bool `json:"diskGbEnabled,omitempty" tf:"disk_gb_enabled,omitempty"`
}

type BiConnectorConfigObservation struct {

	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of readPreference and readPreferenceTags options. For details on BI Connector for Atlas read preferences, refer to the BI Connector Read Preferences Table.
	ReadPreference *string `json:"readPreference,omitempty" tf:"read_preference,omitempty"`
}

type BiConnectorConfigParameters struct {

	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of readPreference and readPreferenceTags options. For details on BI Connector for Atlas read preferences, refer to the BI Connector Read Preferences Table.
	// +kubebuilder:validation:Optional
	ReadPreference *string `json:"readPreference,omitempty" tf:"read_preference,omitempty"`
}

type BiConnectorObservation struct {

	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of readPreference and readPreferenceTags options. For details on BI Connector for Atlas read preferences, refer to the BI Connector Read Preferences Table.
	ReadPreference *string `json:"readPreference,omitempty" tf:"read_preference,omitempty"`
}

type BiConnectorParameters struct {

	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of readPreference and readPreferenceTags options. For details on BI Connector for Atlas read preferences, refer to the BI Connector Read Preferences Table.
	// +kubebuilder:validation:Optional
	ReadPreference *string `json:"readPreference,omitempty" tf:"read_preference,omitempty"`
}

type ClusterObservation struct {
	AdvancedConfiguration []AdvancedConfigurationObservation `json:"advancedConfiguration,omitempty" tf:"advanced_configuration,omitempty"`

	// Flag that indicates whether the cluster can perform backups.
	// If true, the cluster can perform backups. You must set this value to true for NVMe clusters.
	BackupEnabled *bool `json:"backupEnabled,omitempty" tf:"backup_enabled,omitempty"`

	BiConnector []BiConnectorObservation `json:"biConnector,omitempty" tf:"bi_connector,omitempty"`

	// Configuration settings applied to BI Connector for Atlas on this cluster. The MongoDB Connector for Business Intelligence for Atlas (BI Connector) is only available for M10 and larger clusters. The BI Connector is a powerful tool which provides users SQL-based access to their MongoDB databases. As a result, the BI Connector performs operations which may be CPU and memory intensive. Given the limited hardware resources on M10 and M20 cluster tiers, you may experience performance degradation of the cluster when enabling the BI Connector. If this occurs, upgrade to an M30 or larger cluster or disable the BI Connector. See below.
	BiConnectorConfig []BiConnectorConfigObservation `json:"biConnectorConfig,omitempty" tf:"bi_connector_config,omitempty"`

	// The cluster ID.
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Atlas provides different instance sizes, each with a default storage capacity and RAM size. The instance size you select is used for all the data-bearing servers in your cluster. See Create a Cluster providerSettings.instanceSizeName for valid values and default resources.
	ClusterType *string `json:"clusterType,omitempty" tf:"cluster_type,omitempty"`

	// Set of connection strings that your applications use to connect to this cluster. More info in Connection-strings. Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see Connection String Options. NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
	ConnectionStrings []ConnectionStringsObservation `json:"connectionStrings,omitempty" tf:"connection_strings,omitempty"`

	CreateDate *string `json:"createDate,omitempty" tf:"create_date,omitempty"`

	// Capacity, in gigabytes, of the host's root volume. Increase this number to add capacity, up to a maximum possible value of 4096 (i.e., 4 TB). This value must be a positive number. You can't set this value with clusters with local NVMe SSDs. The minimum disk size for dedicated clusters is 10 GB for AWS and GCP. If you specify diskSizeGB with a lower disk size, Atlas defaults to the minimum disk size value. If your cluster includes Azure nodes, this value must correspond to an existing Azure disk type (8, 16, 32, 64, 128, 256, 512, 1024, 2048, or 4095)Atlas calculates storage charges differently depending on whether you choose the default value or a custom value. The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require additional storage space beyond this limitation, consider upgrading your cluster to a higher tier. If your cluster spans cloud service providers, this value defaults to the minimum default of the providers involved.
	DiskSizeGb *float64 `json:"diskSizeGb,omitempty" tf:"disk_size_gb,omitempty"`

	// Possible values are AWS, GCP, AZURE or NONE.  Only needed if you desire to manage the keys, see Encryption at Rest using Customer Key Management for complete documentation.  You must configure encryption at rest for the Atlas project before enabling it on any cluster in the project. For Documentation, see AWS, GCP and Azure. Requirements are if replication_specs.#.region_configs.#.<type>Specs.instance_size is M10 or greater and backup_enabled is false or omitted.
	EncryptionAtRestProvider *string `json:"encryptionAtRestProvider,omitempty" tf:"encryption_at_rest_provider,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Configuration for the collection of key-value pairs that tag and categorize the cluster. See below.
	Labels []LabelsObservation `json:"labels,omitempty" tf:"labels,omitempty"`

	// Version of the cluster to deploy. Atlas supports the following MongoDB versions for M10+ clusters: 4.0, 4.2, 4.4, or 5.0. If omitted, Atlas deploys a cluster that runs MongoDB 4.4. If replication_specs#.region_configs#.<type>Specs.instance_size: M0, M2 or M5, Atlas deploys MongoDB 4.4. Atlas always deploys the cluster with the latest stable release of the specified version.  If you set a value to this parameter and set version_release_system CONTINUOUS, the resource returns an error. Either clear this parameter or set version_release_system: LTS.
	MongoDBMajorVersion *string `json:"mongoDbMajorVersion,omitempty" tf:"mongo_db_major_version,omitempty"`

	// Version of MongoDB the cluster runs, in major-version.minor-version format.
	MongoDBVersion *string `json:"mongoDbVersion,omitempty" tf:"mongo_db_version,omitempty"`

	// Flag that indicates whether the cluster is paused or not. You can pause M10 or larger clusters.  You cannot initiate pausing for a shared/tenant tier cluster.  See Considerations for Paused Clusters
	// NOTE Pause lasts for up to 30 days. If you don't resume the cluster within 30 days, Atlas resumes the cluster.   If you prefer to allow the automated change of state to unpaused use:
	// lifecycle { ignore_changes = [paused] }
	Paused *bool `json:"paused,omitempty" tf:"paused,omitempty"`

	// - Flag that indicates if the cluster uses Continuous Cloud Backup.
	PitEnabled *bool `json:"pitEnabled,omitempty" tf:"pit_enabled,omitempty"`

	// Unique ID for the project to create the database user.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Configuration for cluster regions and the hardware provisioned in them. See below
	ReplicationSpecs []ReplicationSpecsObservation `json:"replicationSpecs,omitempty" tf:"replication_specs,omitempty"`

	// Set to true to retain backup snapshots for the deleted cluster. M10 and above only.
	// Flag that indicates whether to retain backup snapshots for the deleted dedicated cluster
	RetainBackupsEnabled *bool `json:"retainBackupsEnabled,omitempty" tf:"retain_backups_enabled,omitempty"`

	// - Certificate Authority that MongoDB Atlas clusters use. You can specify ISRGROOTX1 (for ISRG Root X1).
	RootCertType *string `json:"rootCertType,omitempty" tf:"root_cert_type,omitempty"`

	// Current state of the cluster. The possible states are:
	StateName *string `json:"stateName,omitempty" tf:"state_name,omitempty"`

	// Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
	TerminationProtectionEnabled *bool `json:"terminationProtectionEnabled,omitempty" tf:"termination_protection_enabled,omitempty"`

	// - Release cadence that Atlas uses for this cluster. This parameter defaults to LTS. If you set this field to CONTINUOUS, you must omit the mongo_db_major_version field. Atlas accepts:
	VersionReleaseSystem *string `json:"versionReleaseSystem,omitempty" tf:"version_release_system,omitempty"`
}

type ClusterParameters struct {

	// +kubebuilder:validation:Optional
	AdvancedConfiguration []AdvancedConfigurationParameters `json:"advancedConfiguration,omitempty" tf:"advanced_configuration,omitempty"`

	// Flag that indicates whether the cluster can perform backups.
	// If true, the cluster can perform backups. You must set this value to true for NVMe clusters.
	// +kubebuilder:validation:Optional
	BackupEnabled *bool `json:"backupEnabled,omitempty" tf:"backup_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	BiConnector []BiConnectorParameters `json:"biConnector,omitempty" tf:"bi_connector,omitempty"`

	// Configuration settings applied to BI Connector for Atlas on this cluster. The MongoDB Connector for Business Intelligence for Atlas (BI Connector) is only available for M10 and larger clusters. The BI Connector is a powerful tool which provides users SQL-based access to their MongoDB databases. As a result, the BI Connector performs operations which may be CPU and memory intensive. Given the limited hardware resources on M10 and M20 cluster tiers, you may experience performance degradation of the cluster when enabling the BI Connector. If this occurs, upgrade to an M30 or larger cluster or disable the BI Connector. See below.
	// +kubebuilder:validation:Optional
	BiConnectorConfig []BiConnectorConfigParameters `json:"biConnectorConfig,omitempty" tf:"bi_connector_config,omitempty"`

	// Atlas provides different instance sizes, each with a default storage capacity and RAM size. The instance size you select is used for all the data-bearing servers in your cluster. See Create a Cluster providerSettings.instanceSizeName for valid values and default resources.
	// +kubebuilder:validation:Optional
	ClusterType *string `json:"clusterType,omitempty" tf:"cluster_type,omitempty"`

	// Capacity, in gigabytes, of the host's root volume. Increase this number to add capacity, up to a maximum possible value of 4096 (i.e., 4 TB). This value must be a positive number. You can't set this value with clusters with local NVMe SSDs. The minimum disk size for dedicated clusters is 10 GB for AWS and GCP. If you specify diskSizeGB with a lower disk size, Atlas defaults to the minimum disk size value. If your cluster includes Azure nodes, this value must correspond to an existing Azure disk type (8, 16, 32, 64, 128, 256, 512, 1024, 2048, or 4095)Atlas calculates storage charges differently depending on whether you choose the default value or a custom value. The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require additional storage space beyond this limitation, consider upgrading your cluster to a higher tier. If your cluster spans cloud service providers, this value defaults to the minimum default of the providers involved.
	// +kubebuilder:validation:Optional
	DiskSizeGb *float64 `json:"diskSizeGb,omitempty" tf:"disk_size_gb,omitempty"`

	// Possible values are AWS, GCP, AZURE or NONE.  Only needed if you desire to manage the keys, see Encryption at Rest using Customer Key Management for complete documentation.  You must configure encryption at rest for the Atlas project before enabling it on any cluster in the project. For Documentation, see AWS, GCP and Azure. Requirements are if replication_specs.#.region_configs.#.<type>Specs.instance_size is M10 or greater and backup_enabled is false or omitted.
	// +kubebuilder:validation:Optional
	EncryptionAtRestProvider *string `json:"encryptionAtRestProvider,omitempty" tf:"encryption_at_rest_provider,omitempty"`

	// Configuration for the collection of key-value pairs that tag and categorize the cluster. See below.
	// +kubebuilder:validation:Optional
	Labels []LabelsParameters `json:"labels,omitempty" tf:"labels,omitempty"`

	// Version of the cluster to deploy. Atlas supports the following MongoDB versions for M10+ clusters: 4.0, 4.2, 4.4, or 5.0. If omitted, Atlas deploys a cluster that runs MongoDB 4.4. If replication_specs#.region_configs#.<type>Specs.instance_size: M0, M2 or M5, Atlas deploys MongoDB 4.4. Atlas always deploys the cluster with the latest stable release of the specified version.  If you set a value to this parameter and set version_release_system CONTINUOUS, the resource returns an error. Either clear this parameter or set version_release_system: LTS.
	// +kubebuilder:validation:Optional
	MongoDBMajorVersion *string `json:"mongoDbMajorVersion,omitempty" tf:"mongo_db_major_version,omitempty"`

	// Flag that indicates whether the cluster is paused or not. You can pause M10 or larger clusters.  You cannot initiate pausing for a shared/tenant tier cluster.  See Considerations for Paused Clusters
	// NOTE Pause lasts for up to 30 days. If you don't resume the cluster within 30 days, Atlas resumes the cluster.   If you prefer to allow the automated change of state to unpaused use:
	// lifecycle { ignore_changes = [paused] }
	// +kubebuilder:validation:Optional
	Paused *bool `json:"paused,omitempty" tf:"paused,omitempty"`

	// - Flag that indicates if the cluster uses Continuous Cloud Backup.
	// +kubebuilder:validation:Optional
	PitEnabled *bool `json:"pitEnabled,omitempty" tf:"pit_enabled,omitempty"`

	// Unique ID for the project to create the database user.
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Configuration for cluster regions and the hardware provisioned in them. See below
	// +kubebuilder:validation:Optional
	ReplicationSpecs []ReplicationSpecsParameters `json:"replicationSpecs,omitempty" tf:"replication_specs,omitempty"`

	// Set to true to retain backup snapshots for the deleted cluster. M10 and above only.
	// Flag that indicates whether to retain backup snapshots for the deleted dedicated cluster
	// +kubebuilder:validation:Optional
	RetainBackupsEnabled *bool `json:"retainBackupsEnabled,omitempty" tf:"retain_backups_enabled,omitempty"`

	// - Certificate Authority that MongoDB Atlas clusters use. You can specify ISRGROOTX1 (for ISRG Root X1).
	// +kubebuilder:validation:Optional
	RootCertType *string `json:"rootCertType,omitempty" tf:"root_cert_type,omitempty"`

	// Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
	// +kubebuilder:validation:Optional
	TerminationProtectionEnabled *bool `json:"terminationProtectionEnabled,omitempty" tf:"termination_protection_enabled,omitempty"`

	// - Release cadence that Atlas uses for this cluster. This parameter defaults to LTS. If you set this field to CONTINUOUS, you must omit the mongo_db_major_version field. Atlas accepts:
	// +kubebuilder:validation:Optional
	VersionReleaseSystem *string `json:"versionReleaseSystem,omitempty" tf:"version_release_system,omitempty"`
}

type ConnectionStringsObservation struct {

	// Private-endpoint-aware mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. DEPRECATED Use connection_strings.private_endpoint[n].connection_string instead.
	AwsPrivateLink map[string]*string `json:"awsPrivateLink,omitempty" tf:"aws_private_link,omitempty"`

	// Private-endpoint-aware mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.awsPrivateLink. DEPRECATED Use connection_strings.private_endpoint[n].srv_connection_string instead.
	AwsPrivateLinkSrv map[string]*string `json:"awsPrivateLinkSrv,omitempty" tf:"aws_private_link_srv,omitempty"`

	// Network-peering-endpoint-aware mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
	Private *string `json:"private,omitempty" tf:"private,omitempty"`

	// Private endpoint connection strings. Each object describes the connection strings you can use to connect to this cluster through a private endpoint. Atlas returns this parameter only if you deployed a private endpoint to all regions to which you deployed this cluster's nodes.
	PrivateEndpoint []PrivateEndpointObservation `json:"privateEndpoint,omitempty" tf:"private_endpoint,omitempty"`

	// Network-peering-endpoint-aware mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
	PrivateSrv *string `json:"privateSrv,omitempty" tf:"private_srv,omitempty"`

	// Public mongodb:// connection string for this cluster.
	Standard *string `json:"standard,omitempty" tf:"standard,omitempty"`

	// Public mongodb+srv:// connection string for this cluster. The mongodb+srv protocol tells the driver to look up the seed list of hosts in DNS. Atlas synchronizes this list with the nodes in a cluster. If the connection string uses this URI format, you don’t need to append the seed list or change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn’t  , use connectionStrings.standard.
	StandardSrv *string `json:"standardSrv,omitempty" tf:"standard_srv,omitempty"`
}

type ConnectionStringsParameters struct {
}

type ElectableSpecsObservation struct {

	// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
	DiskIops *float64 `json:"diskIops,omitempty" tf:"disk_iops,omitempty"`

	// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
	EBSVolumeType *string `json:"ebsVolumeType,omitempty" tf:"ebs_volume_type,omitempty"`

	// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
	InstanceSize *string `json:"instanceSize,omitempty" tf:"instance_size,omitempty"`

	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	NodeCount *float64 `json:"nodeCount,omitempty" tf:"node_count,omitempty"`
}

type ElectableSpecsParameters struct {

	// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
	// +kubebuilder:validation:Optional
	DiskIops *float64 `json:"diskIops,omitempty" tf:"disk_iops,omitempty"`

	// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
	// +kubebuilder:validation:Optional
	EBSVolumeType *string `json:"ebsVolumeType,omitempty" tf:"ebs_volume_type,omitempty"`

	// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
	// +kubebuilder:validation:Required
	InstanceSize *string `json:"instanceSize" tf:"instance_size,omitempty"`

	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	// +kubebuilder:validation:Optional
	NodeCount *float64 `json:"nodeCount,omitempty" tf:"node_count,omitempty"`
}

type EndpointsObservation struct {

	// Unique identifier of the private endpoint.
	EndpointID *string `json:"endpointId,omitempty" tf:"endpoint_id,omitempty"`

	// Cloud service provider on which the servers are provisioned.
	// The possible values are:
	ProviderName *string `json:"providerName,omitempty" tf:"provider_name,omitempty"`

	// Region to which you deployed the private endpoint.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type EndpointsParameters struct {
}

type LabelsObservation struct {

	// The key that you want to write.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The value that you want to write.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type LabelsParameters struct {

	// The key that you want to write.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The value that you want to write.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type PrivateEndpointObservation struct {

	// Private-endpoint-aware mongodb://connection string for this private endpoint.
	ConnectionString *string `json:"connectionString,omitempty" tf:"connection_string,omitempty"`

	// Private endpoint through which you connect to Atlas when you use connection_strings.private_endpoint[n].connection_string or connection_strings.private_endpoint[n].srv_connection_string
	Endpoints []EndpointsObservation `json:"endpoints,omitempty" tf:"endpoints,omitempty"`

	// Private-endpoint-aware mongodb+srv:// connection string for this private endpoint. The mongodb+srv protocol tells the driver to look up the seed list of hosts in DNS . Atlas synchronizes this list with the nodes in a cluster. If the connection string uses this URI format, you don't need to: Append the seed list or Change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn't, use connection_strings.private_endpoint[n].connection_string
	SrvConnectionString *string `json:"srvConnectionString,omitempty" tf:"srv_connection_string,omitempty"`

	// Private endpoint-aware connection string optimized for sharded clusters that uses the mongodb+srv:// protocol to connect to MongoDB Cloud through a private endpoint. If the connection string uses this Uniform Resource Identifier (URI) format, you don't need to change the Uniform Resource Identifier (URI) if the nodes change. Use this Uniform Resource Identifier (URI) format if your application and Atlas cluster supports it. If it doesn't, use and consult the documentation for connectionStrings.privateEndpoint[n].srvConnectionString.
	SrvShardOptimizedConnectionString *string `json:"srvShardOptimizedConnectionString,omitempty" tf:"srv_shard_optimized_connection_string,omitempty"`

	// Type of MongoDB process that you connect to with the connection strings. Atlas returns MONGOD for replica sets, or MONGOS for sharded clusters.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PrivateEndpointParameters struct {
}

type ReadOnlySpecsObservation struct {

	// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
	DiskIops *float64 `json:"diskIops,omitempty" tf:"disk_iops,omitempty"`

	// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
	EBSVolumeType *string `json:"ebsVolumeType,omitempty" tf:"ebs_volume_type,omitempty"`

	// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
	InstanceSize *string `json:"instanceSize,omitempty" tf:"instance_size,omitempty"`

	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	NodeCount *float64 `json:"nodeCount,omitempty" tf:"node_count,omitempty"`
}

type ReadOnlySpecsParameters struct {

	// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
	// +kubebuilder:validation:Optional
	DiskIops *float64 `json:"diskIops,omitempty" tf:"disk_iops,omitempty"`

	// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
	// +kubebuilder:validation:Optional
	EBSVolumeType *string `json:"ebsVolumeType,omitempty" tf:"ebs_volume_type,omitempty"`

	// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
	// +kubebuilder:validation:Required
	InstanceSize *string `json:"instanceSize" tf:"instance_size,omitempty"`

	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	// +kubebuilder:validation:Optional
	NodeCount *float64 `json:"nodeCount,omitempty" tf:"node_count,omitempty"`
}

type RegionConfigsObservation struct {

	// Configuration for the Collection of settings that configures analytics-auto-scaling information for the cluster. The values for the analytics_auto_scaling parameter must be the same for every item in the replication_specs array. See below
	AnalyticsAutoScaling []AnalyticsAutoScalingObservation `json:"analyticsAutoScaling,omitempty" tf:"analytics_auto_scaling,omitempty"`

	// Hardware specifications for analytics nodes needed in the region. Analytics nodes handle analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only and can never become the primary. If you don't specify this parameter, no analytics nodes deploy to this region. See below
	AnalyticsSpecs []AnalyticsSpecsObservation `json:"analyticsSpecs,omitempty" tf:"analytics_specs,omitempty"`

	// Configuration for the Collection of settings that configures auto-scaling information for the cluster. The values for the auto_scaling parameter must be the same for every item in the replication_specs array. See below
	AutoScaling []AutoScalingObservation `json:"autoScaling,omitempty" tf:"auto_scaling,omitempty"`

	// Cloud service provider on which you provision the host for a multi-tenant cluster. Use this only when a provider_name is TENANT and instance_size of a specs is M2 or M5.
	BackingProviderName *string `json:"backingProviderName,omitempty" tf:"backing_provider_name,omitempty"`

	// Hardware specifications for electable nodes in the region. Electable nodes can become the primary and can enable local reads. If you do not specify this option, no electable nodes are deployed to the region. See below
	ElectableSpecs []ElectableSpecsObservation `json:"electableSpecs,omitempty" tf:"electable_specs,omitempty"`

	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// Cloud service provider on which the servers are provisioned.
	// The possible values are:
	ProviderName *string `json:"providerName,omitempty" tf:"provider_name,omitempty"`

	// Hardware specifications for read-only nodes in the region. Read-only nodes can become the primary and can enable local reads. If you don't specify this parameter, no read-only nodes are deployed to the region. See below
	ReadOnlySpecs []ReadOnlySpecsObservation `json:"readOnlySpecs,omitempty" tf:"read_only_specs,omitempty"`

	// Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the Atlas region name, see the reference list for AWS, GCP, Azure.
	RegionName *string `json:"regionName,omitempty" tf:"region_name,omitempty"`
}

type RegionConfigsParameters struct {

	// Configuration for the Collection of settings that configures analytics-auto-scaling information for the cluster. The values for the analytics_auto_scaling parameter must be the same for every item in the replication_specs array. See below
	// +kubebuilder:validation:Optional
	AnalyticsAutoScaling []AnalyticsAutoScalingParameters `json:"analyticsAutoScaling,omitempty" tf:"analytics_auto_scaling,omitempty"`

	// Hardware specifications for analytics nodes needed in the region. Analytics nodes handle analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only and can never become the primary. If you don't specify this parameter, no analytics nodes deploy to this region. See below
	// +kubebuilder:validation:Optional
	AnalyticsSpecs []AnalyticsSpecsParameters `json:"analyticsSpecs,omitempty" tf:"analytics_specs,omitempty"`

	// Configuration for the Collection of settings that configures auto-scaling information for the cluster. The values for the auto_scaling parameter must be the same for every item in the replication_specs array. See below
	// +kubebuilder:validation:Optional
	AutoScaling []AutoScalingParameters `json:"autoScaling,omitempty" tf:"auto_scaling,omitempty"`

	// Cloud service provider on which you provision the host for a multi-tenant cluster. Use this only when a provider_name is TENANT and instance_size of a specs is M2 or M5.
	// +kubebuilder:validation:Optional
	BackingProviderName *string `json:"backingProviderName,omitempty" tf:"backing_provider_name,omitempty"`

	// Hardware specifications for electable nodes in the region. Electable nodes can become the primary and can enable local reads. If you do not specify this option, no electable nodes are deployed to the region. See below
	// +kubebuilder:validation:Optional
	ElectableSpecs []ElectableSpecsParameters `json:"electableSpecs,omitempty" tf:"electable_specs,omitempty"`

	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// Cloud service provider on which the servers are provisioned.
	// The possible values are:
	// +kubebuilder:validation:Required
	ProviderName *string `json:"providerName" tf:"provider_name,omitempty"`

	// Hardware specifications for read-only nodes in the region. Read-only nodes can become the primary and can enable local reads. If you don't specify this parameter, no read-only nodes are deployed to the region. See below
	// +kubebuilder:validation:Optional
	ReadOnlySpecs []ReadOnlySpecsParameters `json:"readOnlySpecs,omitempty" tf:"read_only_specs,omitempty"`

	// Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the Atlas region name, see the reference list for AWS, GCP, Azure.
	// +kubebuilder:validation:Required
	RegionName *string `json:"regionName" tf:"region_name,omitempty"`
}

type ReplicationSpecsObservation struct {

	// A key-value map of the Network Peering Container ID(s) for the configuration specified in region_configs. The Container ID is the id of the container created when the first cluster in the region (AWS/Azure) or project (GCP) was created.  The syntax is "providerName:regionName" = "containerId". Example AWS:US_EAST_1" = "61e0797dde08fb498ca11a71.
	ContainerID map[string]*string `json:"containerId,omitempty" tf:"container_id,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Provide this value if you set a cluster_type of SHARDED or GEOSHARDED. Omit this value if you selected a cluster_type of REPLICASET. This API resource accepts 1 through 50, inclusive. This parameter defaults to 1. If you specify a num_shards value of 1 and a cluster_type of SHARDED, Atlas deploys a single-shard sharded cluster. Don't create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don't provide the same benefits as multi-shard configurations.
	NumShards *float64 `json:"numShards,omitempty" tf:"num_shards,omitempty"`

	// Configuration for the hardware specifications for nodes set for a given regionEach region_configs object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each region_configs object must have either an analytics_specs object, electable_specs object, or read_only_specs object. See below
	RegionConfigs []RegionConfigsObservation `json:"regionConfigs,omitempty" tf:"region_configs,omitempty"`

	// Name for the zone in a Global Cluster.
	ZoneName *string `json:"zoneName,omitempty" tf:"zone_name,omitempty"`
}

type ReplicationSpecsParameters struct {

	// Provide this value if you set a cluster_type of SHARDED or GEOSHARDED. Omit this value if you selected a cluster_type of REPLICASET. This API resource accepts 1 through 50, inclusive. This parameter defaults to 1. If you specify a num_shards value of 1 and a cluster_type of SHARDED, Atlas deploys a single-shard sharded cluster. Don't create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don't provide the same benefits as multi-shard configurations.
	// +kubebuilder:validation:Optional
	NumShards *float64 `json:"numShards,omitempty" tf:"num_shards,omitempty"`

	// Configuration for the hardware specifications for nodes set for a given regionEach region_configs object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each region_configs object must have either an analytics_specs object, electable_specs object, or read_only_specs object. See below
	// +kubebuilder:validation:Required
	RegionConfigs []RegionConfigsParameters `json:"regionConfigs" tf:"region_configs,omitempty"`

	// Name for the zone in a Global Cluster.
	// +kubebuilder:validation:Optional
	ZoneName *string `json:"zoneName,omitempty" tf:"zone_name,omitempty"`
}

// ClusterSpec defines the desired state of Cluster
type ClusterSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ClusterParameters `json:"forProvider"`
}

// ClusterStatus defines the observed state of Cluster.
type ClusterStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ClusterObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Cluster is the Schema for the Clusters API. Provides an Advanced Cluster resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,mongodbatlas}
type Cluster struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.clusterType)",message="clusterType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.projectId)",message="projectId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.replicationSpecs)",message="replicationSpecs is a required parameter"
	Spec   ClusterSpec   `json:"spec"`
	Status ClusterStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ClusterList contains a list of Clusters
type ClusterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Cluster `json:"items"`
}

// Repository type metadata.
var (
	Cluster_Kind             = "Cluster"
	Cluster_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Cluster_Kind}.String()
	Cluster_KindAPIVersion   = Cluster_Kind + "." + CRDGroupVersion.String()
	Cluster_GroupVersionKind = CRDGroupVersion.WithKind(Cluster_Kind)
)

func init() {
	SchemeBuilder.Register(&Cluster{}, &ClusterList{})
}
